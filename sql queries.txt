KPI REQUIREMENTS :

1)Total Revenue :

select SUM(total_price) as total_revenue from pizza_sales ;

2)Average Revenue value :

select SUM(total_price) / COUNT(DISTINCT order_id) as Average_Revenue from pizza_sales ;

3)Total Pizzas sold :

select SUM(quantity) AS Total_Pizzas from pizza_sales;

4)Total Orders Placed :

select COUNT(DISTINCT order_id) AS Total_Orders from pizza_sales ;

5)Average Pizzas per Order :

select SUM(quantity) / COUNT(DISTINCT order_id) AS Average_pizzas_per_order from pizza_sales ; (INTEGER)

SELECT 
    CAST(
        CAST(SUM(quantity) AS DECIMAL(10,2)) / CAST(COUNT(DISTINCT order_id) AS DECIMAL(10,2)) 
    AS DECIMAL(10,2)) AS Average_pizzas_per_order
FROM pizza_sales;

(WANTED IN DECIMAL)

6) Daily Trend for Total Orders :

SELECT 
    DAYNAME(order_Date) AS order_day,
    COUNT(DISTINCT order_id) AS Total_Orders
FROM pizza_sales
GROUP BY order_day;
(alphabetical order)

(MONDAY - SUNDAY)
SELECT 
    DAYNAME(order_Date) AS order_day,
    COUNT(DISTINCT order_id) AS Total_Orders,
    WEEKDAY(order_Date) AS weekday_index
FROM pizza_sales
GROUP BY order_day, weekday_index
ORDER BY weekday_index;

WEEK(date, mode) Week number of the year (1-53)	Not a day index
WEEKDAY(date)	Day index from 0 (Monday) to 6 (Sunday)	0 = Monday, 6 = Sunday
DAYOFWEEK(date)	Day index from 1 (Sunday) to 7 (Saturday)	1 = Sunday, 7 = Saturday

7)Monthly Trends for Total Orders :

SELECT 
    MONTHNAME(order_Date) AS order_month,
    COUNT(DISTINCT order_id) AS Total_Orders
FROM pizza_sales
GROUP BY order_month;
(alphabetical order)

SELECT 
    MONTHNAME(order_Date) AS order_month,
    COUNT(DISTINCT order_id) AS Total_Orders,
    MONTH(order_Date) AS month_number
FROM pizza_sales
GROUP BY order_month, month_number
ORDER BY month_number;
(calender order JAN(1) - DEC(12))


8)Percentage of Sales by Pizza Category :

SELECT pizza_category ,SUM(total_price) AS total_sales , SUM(total_price)*100 / (SELECT sum(total_price) from pizza_sales) AS percentage_sales_by_pizza_category from pizza_sales GROUP BY pizza_category  ;

if we want to see for January then add WHERE MONTH(order_date) = 1 ;(add in both queries that is outer query and sub query)

like that we can apply 

if first quarter that is first 4 months then :

SELECT 
    pizza_category,
    SUM(total_price) AS total_sales,
    SUM(total_price) * 100 / (SELECT SUM(total_price) FROM pizza_sales WHERE QUARTER(order_date) = 1) AS percentage_sales_by_pizza_category
FROM pizza_sales
WHERE QUARTER(order_date) = 1
GROUP BY pizza_category;

if only 3 months then :
MONTH(order_date) IN (1,2,3) ;

9)Percentage of Sales by Pizza Category :

SELECT pizza_size ,SUM(total_price) AS total_sales , SUM(total_price)*100 / (SELECT sum(total_price) from pizza_sales) AS percentage_sales_by_pizza_size from pizza_sales GROUP BY pizza_size  ;

10)Top 5 Best Sellers by Revenue , Total Quantity of Total Orders :

SELECT pizza_name , SUM(total_price) from pizza_sales group by pizza_name order by SUM(total_price) DESC LIMIT 5 ;
 
OR SELECT TOP 5 pizza_name , SUM(total_price) from pizza_sales group by pizza_name order by SUM(total_price) DESC ;

10)Top 5 WORST Sellers by Revenue , Total Quantity of Total Orders :

SELECT TOP 5 pizza_name , SUM(total_price) from pizza_sales group by pizza_name order by SUM(total_price) ASC ;

IF QUANTITY WISE THEN CHANGE total_price to quantity

